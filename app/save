    const getPhoto = async (photoName: string) => {
      try {
        // Check if documentDirectory is available
        if (!FileSystem.documentDirectory) {
          throw new Error('Document directory is not accessible');
        }

        // Request the photo from the server
        const response = await fetch('http://'+ipv4+':'+port+'/get-photo/'+photoName); // Replace with your server IP
        if (!response.ok) {
          throw new Error('Photo not found'+photoName);
        }

        // Convert the response into a Blob (image data)
        const blob = await response.blob();

        // Read the Blob into a Base64 string
        const base64String = await blobToBase64(blob);

        // Remove the "data:image/jpeg;base64," part of the Base64 string
        const base64Data = base64String.split(',')[1]; // This removes the prefix

        // Save the image as a Base64 file in the local file system
        const fileUri = FileSystem.documentDirectory + photoName; // Store image in the app's document directory
        await FileSystem.writeAsStringAsync(fileUri, base64Data, {
          encoding: FileSystem.EncodingType.Base64,
        });

        // Set the image URI to be used by the Image component
        setImageUri(fileUri);
        setLoading(false); // Set loading to false once the image is loaded
      } catch (error) {
        console.error('Error fetching photo:', error);
        setError('Failed to load image'); // Set an error message if something goes wrong
        setLoading(false); // Set loading to false in case of error
      }
    };
